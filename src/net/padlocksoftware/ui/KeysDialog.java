/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * KeysDialog.java
 *
 * Created on Jan 19, 2010, 10:13:42 AM
 */
package net.padlocksoftware.ui;

import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.ClipboardOwner;
import java.awt.datatransfer.StringSelection;
import java.awt.datatransfer.Transferable;
import java.security.KeyPair;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import net.padlocksoftware.padlock.KeyManager;
import org.apache.commons.codec.binary.Hex;

/**
 *
 * @author jason
 */
public class KeysDialog extends JFrame {

  private class ClipOwner implements ClipboardOwner {

    public void lostOwnership(Clipboard clipboard, Transferable contents) {
    }
  }

  ///////////////////////////// Class Attributes \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

  ////////////////////////////// Class Methods \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

  //////////////////////////////// Attributes \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

  private final KeysTableModel tableModel;

  private final PadlockModel model;

  private final NamedIndexManager nameManager;

  /////////////////////////////// Constructors \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

  public KeysDialog(PadlockModel model, java.awt.Frame parent, boolean modal) {
    super("Padlock KeyPairs");
    getRootPane().putClientProperty("apple.awt.brushMetalLook", Boolean.TRUE);
    this.model = model;
    tableModel = new KeysTableModel(model);
    nameManager = new NamedIndexManager("Key");
    initComponents();
    setIconImages(UIUtils.getIcons());
    keysTable.setModel(tableModel);
    keysTable.getSelectionModel().addListSelectionListener(new ListSelectionListener() {

      public void valueChanged(ListSelectionEvent e) {
        updateSelection();
      }
    });

    updateSelection();
    if (UIUtils.isMac()) {
       UIUtils.macifyTable(keysTable);
    }
  }

  ////////////////////////////////// Methods \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

  private List<String> getSelectedKeys() {
    int[] rows = keysTable.getSelectedRows();
    List<String> selectedKeys = new ArrayList<String>();
    for (int row : rows) {
      int updatedRow = keysTable.convertRowIndexToModel(row);
      selectedKeys.add(tableModel.getNameAtIndex(updatedRow));
    }

    return selectedKeys;
  }

  private void updateSelection() {

    List<String> selectedKeys = getSelectedKeys();
    
    // Enable/disable buttons as required
    if (selectedKeys.size() == 0) {
      removeButton.setEnabled(false);
      renameButton.setEnabled(false);
      updateCodeBox(null);
    } else if (selectedKeys.size() == 1) {
      removeButton.setEnabled(true);
      renameButton.setEnabled(true);
      updateCodeBox(model.getKey(selectedKeys.get(0)));
    } else {
      removeButton.setEnabled(true);
      renameButton.setEnabled(false);
      updateCodeBox(null);
    }


  }

  //------------------------ Implements:

  //------------------------ Overrides:

  //---------------------------- Abstract Methods -----------------------------

  //---------------------------- Utility Methods ------------------------------

  private String[] formatOutput(String publicKey) {
    List<String> list = new ArrayList<String>();

    // Break the public key String into 60 character strings
    int LENGTH = 60;
    int start = -LENGTH;
    int end = 0;

    while (end < publicKey.length()) {
      end = Math.min(end + LENGTH, publicKey.length());
      start += LENGTH;
      list.add(publicKey.substring(start, end));
    }

    return list.toArray(new String[0]);
  }

  private void updateCodeBox(KeyPair pair) {

    if (pair == null) {
      codeArea.setText("");
      return;
    }

    String[] lines = formatOutput(new String(Hex.encodeHex(pair.getPublic().getEncoded())));
    StringBuffer buffer = new StringBuffer();
    for (int x = 0; x < lines.length; x++) {
      String line = lines[x];
      if (x == 0) {
        // First line
        buffer.append("\t private static final String publicKey = \n\t\t\""
                + line + "\" + \n");
      } else if (x == lines.length - 1) {
        // Last line
        buffer.append("\t\t\"" + line + "\";\n");
      } else {
        buffer.append("\t\t\"" + line + "\" + \n");
      }
    }

    codeArea.setText(buffer.toString());
  }

  //---------------------------- Property Methods -----------------------------

  
  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    renameDialog = new javax.swing.JDialog();
    statusPanel = new net.padlocksoftware.ui.StatusPanel();
    jLabel1 = new javax.swing.JLabel();
    jLabel2 = new javax.swing.JLabel();
    currentNameField = new javax.swing.JTextField();
    newNameField = new javax.swing.JTextField();
    okButton = new javax.swing.JButton();
    cancelButton = new javax.swing.JButton();
    statusPanel1 = new net.padlocksoftware.ui.StatusPanel();
    jScrollPane1 = new javax.swing.JScrollPane();
    keysTable = new javax.swing.JTable();
    generateButton = new javax.swing.JButton();
    removeButton = new javax.swing.JButton();
    renameButton = new javax.swing.JButton();
    jScrollPane2 = new javax.swing.JScrollPane();
    codeArea = new javax.swing.JTextArea();
    closeButton = new javax.swing.JButton();
    copyButton = new javax.swing.JButton();

    renameDialog.setTitle("Rename Key");
    renameDialog.setModal(true);

    jLabel1.setText("Current Name:");

    jLabel2.setText("New Name:");

    currentNameField.setEditable(false);
    currentNameField.setText("jTextField1");

    newNameField.setText("jTextField2");

    okButton.setText("Ok");
    okButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        okButtonActionPerformed(evt);
      }
    });

    cancelButton.setText("Cancel");
    cancelButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        cancelButtonActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout renameDialogLayout = new javax.swing.GroupLayout(renameDialog.getContentPane());
    renameDialog.getContentPane().setLayout(renameDialogLayout);
    renameDialogLayout.setHorizontalGroup(
      renameDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(renameDialogLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(renameDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
          .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(renameDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(currentNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(newNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addContainerGap(10, Short.MAX_VALUE))
      .addComponent(statusPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 419, Short.MAX_VALUE)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, renameDialogLayout.createSequentialGroup()
        .addContainerGap(273, Short.MAX_VALUE)
        .addComponent(cancelButton)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(okButton)
        .addContainerGap())
    );

    renameDialogLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {currentNameField, newNameField});

    renameDialogLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cancelButton, okButton});

    renameDialogLayout.setVerticalGroup(
      renameDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(renameDialogLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(renameDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel1)
          .addComponent(currentNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(renameDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel2)
          .addComponent(newNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
        .addGroup(renameDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(okButton)
          .addComponent(cancelButton))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addComponent(statusPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
    );

    setTitle("Padlock Keys");
    setResizable(false);

    keysTable.setAutoCreateRowSorter(true);
    keysTable.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][] {
        {null, null, null, null},
        {null, null, null, null},
        {null, null, null, null},
        {null, null, null, null}
      },
      new String [] {
        "Title 1", "Title 2", "Title 3", "Title 4"
      }
    ));
    keysTable.setRowHeight(20);
    jScrollPane1.setViewportView(keysTable);

    generateButton.setText("Generate Key");
    generateButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        generateButtonActionPerformed(evt);
      }
    });

    removeButton.setText("Remove Key");
    removeButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        removeButtonActionPerformed(evt);
      }
    });

    renameButton.setText("Rename Key");
    renameButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        renameButtonActionPerformed(evt);
      }
    });

    codeArea.setColumns(20);
    codeArea.setEditable(false);
    codeArea.setFont(new java.awt.Font("Monospaced", 0, 12));
    codeArea.setRows(5);
    codeArea.setTabSize(3);
    jScrollPane2.setViewportView(codeArea);

    closeButton.setText("Close");
    closeButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        closeButtonActionPerformed(evt);
      }
    });

    copyButton.setText("Copy to clipboard");
    copyButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        copyButtonActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(copyButton)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 387, Short.MAX_VALUE)
        .addComponent(closeButton)
        .addContainerGap())
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 563, Short.MAX_VALUE)
          .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 563, Short.MAX_VALUE)
          .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
            .addComponent(generateButton)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(removeButton)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(renameButton)))
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(generateButton)
          .addComponent(removeButton)
          .addComponent(renameButton))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(closeButton)
          .addComponent(copyButton))
        .addContainerGap())
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
      setVisible(false);
    }//GEN-LAST:event_closeButtonActionPerformed

    private void copyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copyButtonActionPerformed
      Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
      clipboard.setContents(new StringSelection(codeArea.getText()), new ClipOwner());

    }//GEN-LAST:event_copyButtonActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
      List<String> selectedKeys = getSelectedKeys();

      for (String keyName : selectedKeys) {
        model.removeKey(keyName);
      }
    }//GEN-LAST:event_removeButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
      String newName = newNameField.getText();
      String oldName = currentNameField.getText();
      if (newName.length() < 1) {
        statusPanel.warn("Please enter a new name");
      }
      else {
        model.renameKey(oldName, newName);
        renameDialog.setVisible(false);
      }
    }//GEN-LAST:event_okButtonActionPerformed

    private void renameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_renameButtonActionPerformed
      List<String> selectionList = getSelectedKeys();
      if (selectionList.size() == 1) {
        currentNameField.setText(selectionList.get(0));
        newNameField.setText(selectionList.get(0));
        renameDialog.pack();
        renameDialog.setLocationRelativeTo(this);
        renameDialog.setVisible(true);
      }
    }//GEN-LAST:event_renameButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
      renameDialog.setVisible(false);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void generateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateButtonActionPerformed
      KeyPair kp = KeyManager.createKeyPair();
      model.addKey(nameManager.getNext(), kp);
    }//GEN-LAST:event_generateButtonActionPerformed

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton cancelButton;
  private javax.swing.JButton closeButton;
  private javax.swing.JTextArea codeArea;
  private javax.swing.JButton copyButton;
  private javax.swing.JTextField currentNameField;
  private javax.swing.JButton generateButton;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JScrollPane jScrollPane2;
  private javax.swing.JTable keysTable;
  private javax.swing.JTextField newNameField;
  private javax.swing.JButton okButton;
  private javax.swing.JButton removeButton;
  private javax.swing.JButton renameButton;
  private javax.swing.JDialog renameDialog;
  private net.padlocksoftware.ui.StatusPanel statusPanel;
  private net.padlocksoftware.ui.StatusPanel statusPanel1;
  // End of variables declaration//GEN-END:variables
}
