package net.padlocksoftware.ui;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import net.padlocksoftware.padlock.license.License;
import net.padlocksoftware.padlock.license.LicenseIO;

/**
 *
 * @author jason
 */
public class LicenseExportDialog extends javax.swing.JDialog {

  private final Logger logger;
  private final PadlockModel model;
  private final JFileChooser chooser;
  private File exportFolder;
  private final List<String> licenseNames;

  /** Creates new form LicenseImportDialog */
  public LicenseExportDialog(java.awt.Frame parent, PadlockModel model) {
    super(parent, true);
    logger = Logger.getLogger(getClass().getName());
    initComponents();
    this.model = model;
    licenseNames = new ArrayList<String>();

    chooser = new JFileChooser();
    chooser.setDialogType(JFileChooser.OPEN_DIALOG);
    chooser.setDialogTitle("Select license export folder");
    chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);

    resetStatusPanel();

    exportButton.setEnabled(false);
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jPanel1 = new javax.swing.JPanel();
    jLabel1 = new javax.swing.JLabel();
    jLabel2 = new javax.swing.JLabel();
    fileLabel = new javax.swing.JLabel();
    selectButton = new javax.swing.JButton();
    exportButton = new javax.swing.JButton();
    closeButton = new javax.swing.JButton();
    statusPanel = new net.padlocksoftware.ui.StatusPanel();

    setTitle("Import a License File");

    jPanel1.setBackground(new java.awt.Color(70, 70, 70));
    jPanel1.setPreferredSize(new java.awt.Dimension(542, 54));

    jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12));
    jLabel1.setForeground(new java.awt.Color(255, 255, 255));
    jLabel1.setText("License File Export");

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 562, Short.MAX_VALUE))
    );
    jPanel1Layout.setVerticalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)
    );

    jLabel2.setText("Output Folder:");

    fileLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(70, 70, 70)));

    selectButton.setText("Select Folder");
    selectButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        selectButtonActionPerformed(evt);
      }
    });

    exportButton.setText("Export");
    exportButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        exportButtonActionPerformed(evt);
      }
    });

    closeButton.setText("Close");
    closeButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        closeButtonActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 572, Short.MAX_VALUE)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
          .addGroup(layout.createSequentialGroup()
            .addComponent(jLabel2)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(fileLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(selectButton))
          .addGroup(layout.createSequentialGroup()
            .addComponent(closeButton)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(exportButton)))
        .addContainerGap())
      .addComponent(statusPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 572, Short.MAX_VALUE)
    );

    layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {closeButton, exportButton});

    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(selectButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(fileLabel))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
              .addComponent(exportButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(closeButton)))
          .addComponent(jLabel2))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(statusPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
    );

    layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {fileLabel, jLabel2, selectButton});

    layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {closeButton, exportButton});

    pack();
  }// </editor-fold>//GEN-END:initComponents

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
      setVisible(false);
    }//GEN-LAST:event_closeButtonActionPerformed

    private void selectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectButtonActionPerformed
      int returnVal = chooser.showOpenDialog(this);
      if (returnVal == JFileChooser.APPROVE_OPTION) {
        File file = chooser.getSelectedFile();
        fileLabel.setText(file.getAbsolutePath());
        if (file.isDirectory()) {
          exportFolder = file;
          updateState();
        } else {
          exportFolder = null;
          updateState();
          statusPanel.info("Sorry, the selected export location isn't a folder");
        }
      }
    }//GEN-LAST:event_selectButtonActionPerformed

    private void exportButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportButtonActionPerformed
      int exportCount = 0;
      for (String licenseName : licenseNames) {
        File exportFile = new File(exportFolder, licenseName + ".lic");
        License license = model.getLicense(licenseName);
        if (license != null) {
          try {
            LicenseIO.exportLicense(license, exportFile);
            exportCount++;
          } catch (IOException ex) {
            logger.log(Level.INFO, null, ex);
          }
        }
      }

      statusPanel.info("Succesfully exported " + exportCount + " license" +
              (exportCount != 0 ? "s" : "") + ".");

    }//GEN-LAST:event_exportButtonActionPerformed

  private void resetStatusPanel() {
    statusPanel.info("Select a license file to import into Padlock.");
  }

  public void setLicenses(List<String> licenseNames) {
    this.licenseNames.clear();
    this.licenseNames.addAll(licenseNames);

    updateState();
  }

  private void updateState() {
    // Do we have an export folder selected?
    if (exportFolder != null) {
      int count = licenseNames.size();
      statusPanel.info(count + " license" + (count != 1 ? "s" : "") + " selected for export.");
      exportButton.setEnabled(true);
    } else {
      statusPanel.info("Select an export folder.");
      exportButton.setEnabled(false);
    }
  }
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton closeButton;
  private javax.swing.JButton exportButton;
  private javax.swing.JLabel fileLabel;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JButton selectButton;
  private net.padlocksoftware.ui.StatusPanel statusPanel;
  // End of variables declaration//GEN-END:variables
}
